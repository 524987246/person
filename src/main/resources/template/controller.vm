package org.great.web.controller.sys;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.great.util.beanValidtor.ValidtorUtil;
import org.great.util.myutil.MyStringUtils;
import org.great.util.myutil.MyResult;
import org.great.web.bean.sys.${name};
import org.great.web.service.sys.${name}Service;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import com.github.pagehelper.PageHelper;
/**
 * 
 * @author xiejun
 * @date 2017-10-23 09:52:10
 * @since 3.0
 */
@Controller
@RequestMapping("/Reception/${name2}")
public class ${name}Controller {
	@Resource
	private ${name}Service ${name2}Service;

	/**
	 * 获取页面
	 * 
	 * @return
	 */
	@RequiresPermissions("sys:${name2}:view")
	@RequestMapping(value = "to.html", method = RequestMethod.GET, produces = "text/html;charset=UTF-8")
	public String to(Model model) {
		List<${name}> list = ${name2}Service.findList(new ${name}());
		model.addAttribute("list", list);
		return "newjsp/sys/${name2}-list";
	}

	/**
	 * 获取数据
	 * 
	 * 
	 */
	@RequiresPermissions("sys:${name2}:view")
	@RequestMapping(value = "list.html", method = RequestMethod.POST, produces = "text/html;charset=UTF-8")
	@ResponseBody
	public MyResult info(@RequestBody ${name} ${name2}, HttpServletRequest request, Model model) {
		Map<String, Object> map = new HashMap<String, Object>();
		PageHelper.startPage(${name2}.getPage_new(), ${name2}.getPage_size());
		List<${name}> list = ${name2}Service.findList(${name2});
		PageInfo<${name}> page = new PageInfo<${name}>(list);
		map.put("page", page);
		map.put("obj", ${name2});
		return MyResult.ok(map);
	}

	/**
	 * 获取数据
	 * 
	 * 
	 */
	@RequiresPermissions("sys:${name2}:view")
	@RequestMapping(value = "one.html", method = RequestMethod.GET, produces = "text/html;charset=UTF-8")
	public MyResult one(${name} ${name2}, HttpServletRequest request, Model model) {
		if (${name2}.getId() != null) {
			${name2} = ${name2}Service.get(${name2}.getId());
		}
		model.addAttribute("${name2}", ${name2});
		return "newjsp/sys/${name2}-one";
	}

	@RequiresPermissions("sys:${name2}:save")
	@RequestMapping(value = "save.html", produces = "text/html;charset=UTF-8")
	@ResponseBody
	public MyResult save(@RequestBody ${name} ${name2}, HttpServletRequest request) {
		String str = ValidtorUtil.validbean(${name2});
		if (MyStringUtils.isEmpty(str)) {
			return str;
		}
		int i = ${name2}Service.save(${name2});
		return i > 0 ? MyResult.ok("保存成功") : MyResult.error("保存失败");
	}


	@RequiresPermissions("sys:${name2}:update")
	@RequestMapping(value = "update.html")
	@ResponseBody
	public MyResult update(@RequestBody ${name} ${name2}, HttpServletRequest request) {
		String str = ValidtorUtil.validbean(${name2});
		if (MyStringUtils.isEmpty(str)) {
			return str;
		}
		int i = ${name2}Service.update(${name2});
		return i > 0 ? MyResult.ok("修改成功") : MyResult.error("修改成功");
	}

	@RequiresPermissions("sys:${name2}:delete")
	@RequestMapping(value = "del.html", produces = "text/html;charset=UTF-8")
	@ResponseBody
	public MyResult delete(@RequestBody ${name} ${name2}, HttpServletRequest request) {
		int i = ${name2}Service.delete(${name2});
		return i > 0 ? MyResult.ok("删除成功") : MyResult.error("删除失败");
	}
	
	@RequiresPermissions("sys:${name2}:batchdelete")
	@RequestMapping(value = "batchdelete.html", produces = "text/html;charset=UTF-8")
	@ResponseBody
	public MyResult batchdelete(@RequestBody ${name} ${name2}, HttpServletRequest request) {
		int i = ${name2}Service.batchdelete(${name2});
		return i > 0 ? MyResult.ok("批量" + i + "个删除成功") : MyResult.error("批量删除失败");
	}
}
